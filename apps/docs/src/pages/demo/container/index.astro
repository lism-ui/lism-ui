---
import DemoPageLayout from '~/layouts/DemoPageLayout.astro';
import { AttsLabels, TipCode, GutterGuide, LoremContent } from './components.js';
import { Lism, Box, Container, Divider, Spacer, Text } from '@lism-ui/astro';
import './style.scss';
---

<DemoPageLayout>
	<Lism id='demo-wrapper' isFlow py={50} p='1px'>
		<h2>is--container</h2>
		<p>
			<TipCode text='is--container' />単体では、効果としては主に contaner-type:inline-size
			が適用されるだけです。
		</p>
		<Container>
			<AttsLabels atts='is--container' />
			<LoremContent />
		</Container>
		<p>
			ただし、margin-inline:auto
			も適用されているので、自身の横幅がセットされている時は中央寄せされます。
		</p>
		<Container maxW='s'>
			<AttsLabels atts='is--container.-maxW:' />
			<LoremContent />
		</Container>

		<Spacer h='1rem' />

		<h2>is--container (-container: あり)</h2>
		<p><code>.-container:s|m|l</code> クラスにより、内部のコンテンツ幅を制御できます。</p>
		<!-- </Container> -->
		<Container size='m' isFlow>
			<AttsLabels atts='is--container,-container:m' />
			<LoremContent />
			<LoremContent />
			<!-- <GutterGuide /> -->
		</Container>
		<Container size='s' isFlow>
			<AttsLabels atts='is--container,-container:s' />
			<LoremContent />
			<LoremContent />
			<!-- <GutterGuide /> -->
		</Container>
		<Container size='l' isFlow='s'>
			<AttsLabels atts='is--container,-container:l' />
			<LoremContent />
			<LoremContent />
			<!-- <GutterGuide /> -->
		</Container>

		<Spacer h='1rem' />

		<h2>container要素のネスト</h2>

		<p>
			<code>is--container</code> は子要素の幅を変数で制限するため、同じ変数を扱うコンテナがネストされると、（子要素側の）コンテナの幅がそのコンテンツサイズと同じ大きさになります。
		</p>
		<Container size='m' hasGutter isFlow='s'>
			<AttsLabels atts='is--container,-container:m,has--gutter' />
			<LoremContent />
			<LoremContent />
			<Spacer h='.5rem' />
			<Container size='s' isFlow='s'>
				<AttsLabels atts='is--container,-container:s' />
				<LoremContent />
				<LoremContent />
			</Container>
			<GutterGuide />
		</Container>

		<Spacer h='1rem' />

		<h2>コンテナクエリの挙動について</h2>
		<p>
			<br />
			コンテナクエリの判定値は<b>直前の親コンテナの幅</b>になりますが、
			<code>.-container:s|m|l</code> は子要素の幅を制限しているだけで、 自身の横幅は100%です。つまり、コンテナクエリの判定値もこの100%サイズが基準となります。
		</p>

		<Container size='s' isFlow='s'>
			<AttsLabels atts='is--container,-container:s' />
			{/* <LoremContent /> */}
			<Box isFlow='s'>
				<AttsLabels atts='div' />
				<p>
					ここでのコンテナクエリの判定値は、外側の（青色の点線で囲われた）コンテナ要素のサイズです。
				</p>
				<Lism p='10' isFlow='s'>
					<Lism bd bdc='blue'>
						<Lism
							w='50cqw'
							bgc='blue:20%'
							p='10'
							bg='u:stripe'
							bd='r'
							bdc='blue'
							whs='nw'>width: 50cqw を適用したBOX</Lism
						></Lism
					>
					<p>
						コンテナクエリ適用状態 :
						<Text tag='span' lh='1' p='5' bd boxcolor='blue' d={['n', 'inline-block']}
							>@sm~</Text
						>
						<Text
							tag='span'
							lh='1'
							p='5'
							bd
							boxcolor='blue'
							d={['n', null, 'inline-block']}>@md~</Text
						>
						<Text
							tag='span'
							lh='1'
							p='5'
							bd
							boxcolor='blue'
							d={['n', null, null, 'inline-block']}>@lg~</Text
						>
					</p>
				</Lism>
			</Box>
			<Spacer h='1rem' />
			<Container>
				<AttsLabels atts='is--container' />
				<p>
					ここでのコンテナクエリの判定値は、内部でさらに配置している（緑色の点線で囲われた）コンテナ要素のサイズです。
				</p>
				<Lism p='10' isFlow='s'>
					<Lism bd bdc='green'>
						<Lism
							w='50cqw'
							bgc='green:20%'
							p='10'
							bg='u:stripe'
							bd='r'
							bdc='green'
							whs='nw'>width: 50cqw を適用したBOX</Lism
						></Lism
					>
					<p>
						コンテナクエリ適用状態 :
						<Text tag='span' lh='1' p='5' bd boxcolor='green' d={['n', 'inline-block']}
							>@sm~</Text
						>
						<Text
							tag='span'
							lh='1'
							p='5'
							bd
							boxcolor='green'
							d={['n', null, 'inline-block']}>@md~</Text
						>
						<Text
							tag='span'
							lh='1'
							p='5'
							bd
							boxcolor='green'
							d={['n', null, null, 'inline-block']}>@lg~</Text
						>
					</p>
				</Lism>
			</Container>
		</Container>
		<Spacer h='10rem' />
	</Lism>
</DemoPageLayout>
