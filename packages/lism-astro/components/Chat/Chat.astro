---
import { LismProps } from '../types';
import { Grid } from '../Grid';
import ChatName from './ChatName.astro';
import ChatAvatar from './ChatAvatar.astro';
import ChatContent from './ChatContent.astro';
import ChatFooter from './ChatFooter.astro';
import { getProps } from '@lism-ui/core/components/Chat/getProps';

interface Props extends LismProps {}

let {
	_lismClass = [],
	lismState = [],
	name,
	avatar,
	footer,
	variant = 'speak',
	direction = 'start',
	isFlow = 's',
	bodyProps = {},
	contentProps = {},
	...props
} = Astro.props || {};

_lismClass.push(`c--chat c--chat--${direction}`);
if (variant) _lismClass.push(`c--chat--${variant}`);

const hasName = name || Astro.slots.has('name');
const hasFooter = footer || Astro.slots.has('footer');
// const hasAvatar = avatar || Astro.slots.has('avatar');
---

<Grid
	_lismClass={_lismClass}
	lismState={lismState}
	data-dir={direction}
	{...getProps(direction, variant)}
	{...props}
>
	{hasName && <ChatName>{name || <slot name='name' />}</ChatName>}
	{avatar && <ChatAvatar src={avatar} />}
	<ChatContent
		isFlow={isFlow}
		variant={variant}
		direction={direction}
		contentProps={contentProps}
		{...bodyProps}
	>
		<slot />
	</ChatContent>
	{hasFooter && <ChatFooter>{footer || <slot name='footer' />}</ChatFooter>}
</Grid>
