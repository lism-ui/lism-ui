/* ------------------------------------------------------------
	段階的な値は基本的に 10単位で。
		→ 0, (5), 10, 20, 30,...
		→ なぜ 基本単位が 1 ではなく 10 か。 → 間の数値をユーザーがカスタマイズで増やせるように。

	レイヤー的な段階値
		→ ..., -2, -1, 0, 1,2,3...

	カラーの段階値は 100,200,300 ?　→ 10,20,...に揃えてもいいか。

	真ん中のデフォルト値があって、そこから見て小さいか大きいか
	 →　..., 3xs, 2xs, xs, s,  m||root,  l, xl, 2xl, 3xl...

 ------------------------------------------------------------ */

:root {
	/* ------------------------------------------------------------
	  コンテンツサイズ: ユーザー側で定義が必要
	    コンテンツサイズは960 ~ 1120 くらいがよさそう.
	    1080 にしてるのは、 1920 * 1080画像がきれいに配置できるため？
	------------------------------------------------------------ */
	// コンテンツサイズは960 ~ 1120 くらいがよさそう. @lg よりは大きく?
	--size--xl: 1600px; // 80*20
	--size--l: 1280px; // 80*16
	--size--m: 960px; // 80*12
	--size--s: 640px; // 80*8
	// --size--xs: 320px; // 80*4
	--size--xs: 16rem; // 最低限維持したいアイテムサイズの標準値。withSide,reel,columns で使用

	// --size--l: 1240px; // ヘッダーなどワイドエリアのサイズ
	// --size--m: 1080px; // 基本のコンテンツエリア
	// --size--s: 720px; //45rem; // slim幅1カラムテンプレート用

	/* ------------------------------------------------------------
	  Spacing
	------------------------------------------------------------ */

	--herfLeading: calc((1lh - 1em) / 2);

	// フィボナッチ数列 0, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89,
	// 0 .25rem, .5rem, .75rem, 1.25rem, M:(8):2rem, 3.25rem, 5.25rem, 8.5rem

	// 1=0.125 Fibonacci数列
	// --s--1: 0.125rem;
	--s--5: 0.25rem;
	--s--10: 0.375rem;
	// --s--15: 0.375rem;
	--s--20: 0.625rem;
	--s--30: 1rem;
	--s--40: 1.625rem;
	--s--50: 2.625rem;
	--s--60: 4.25rem;
	--s--70: 6.875rem;
	--s--80: 11.125rem;
	--s--90: 18rem;

	// 後半等比数列?
	// --s--70: calc(var(--s--60) * 1.5);
	// --s--80: calc(var(--s--70) * 1.5);
	// --s--90: calc(var(--s--80) * 1.5);

	// テキストのline-height分を考慮した上下左右の余白
	// --p--box--s: 0.75em; //calc(0.75em - var(--herfLeading)) 0.75em; //0.625em 0.75em;
	// --p--box: calc(1.25em - var(--herfLeading)) 1.25em;
	// --p--box--l: calc(1.75em - var(--herfLeading)) 1.75em; //1.375em 1.5em;

	// .is--flow の余白
	// --flowGap-offset: calc(var(--herfLeading) * 2);
	--flowGap: var(--s--40);
	--flowGap--s: var(--s--20);
	--flowGap--h: 2.5em;

	// コンテンツの左右の余白
	// --gutter: 2rem;
	--gutter: var(--s--40);

	/* ------------------------------------------------------------
	    タイポグラフィ
	------------------------------------------------------------ */

	// --ff--sans: sans-serif;
	--ff--serif: serif;
	// --ff--sans: 'Hiragino Kaku Gothic ProN', 'Hiragino Sans', 'Meiryo', sans-serif;
	--ff--sans: -apple-system, 'BlinkMacSystemFont', 'Hiragino Kaku Gothic ProN', 'Hiragino Sans',
		Meiryo, sans-serif, 'Segoe UI Emoji';
	// --ff--sans: 'Hiragino Kaku Gothic ProN', 'Hiragino Sans', 'Meiryo', sans-serif;
	--ff--mono: Menlo, Consolas, monaco, monospace;
	--ff--emoji: 'Apple Color Emoji', 'Segoe UI Emoji', 'Android Emoji', 'Segoe UI Symbol';

	--ff--root: var(--ff--sans);

	// ------------------------------
	// font-weight
	// ------------------------------
	// --fw--bold: 700;
	// --fw--thin: 100;

	// ------------------------------
	// letter-spacing
	// ------------------------------
	--lts--root: normal;
	--lts--s: -0.05em;
	--lts--l: 0.05em;
	--lts--xl: 0.25em;

	// --lts---2: -0.05em;
	// --lts---1: -0.025em;
	// --lts--0: 0em;
	// --lts--1: 0.025em;
	// --lts--2: 0.05em;
	// --lts--3: 0.075em;
	// --lts--4: 0.1em;
	// --lts--5: 0.25em;
	// --lts--6: 0.5em;

	// ------------------------------
	// font-size 変数
	// ------------------------------
	// font-size 変数
	--fz--root: clamp(0.875rem, 0.625rem + 1vw, 1rem); // 400 - 600
	// --fz--hero?
	--fz--m: 1em; // デフォルトでフォントサイズ 変わっているものを1emにリセットしたい時に必要
	--fz--r: 1rem; // → --fz--base?

	// 倍音列(分子8) での計算値
	--fz--5xl: 4em; //calc(1em * 8 / 2);
	--fz--4xl: 2.667em; // calc(1em * 8 / 3);
	--fz--3xl: 2em; //calc(1em * 8 / 4);
	--fz--2xl: 1.6em; //calc(1em * 8 / 5);
	--fz--xl: 1.333em; //calc(1em * 8 / 6);
	--fz--l: 1.143em; //calc(1em * 8 / 7);
	--fz--s: 0.889em; // calc(1em * 8 / 9);
	--fz--xs: 0.8em; //calc(1em * 8 / 10);
	--fz--2xs: 0.727em; //calc(1em * 8 / 11);

	// --fzMolecule: 8; // 7~9に対応.
	// --fz--5xl: min(5em, calc(1em * var(--fzMolecule) / (var(--fzMolecule) - 6)));
	// --fz--4xl: min(4em, calc(1em * var(--fzMolecule) / (var(--fzMolecule) - 5)));
	// --fz--3xl: calc(1em * var(--fzMolecule) / (var(--fzMolecule) - 4));
	// --fz--2xl: calc(1em * var(--fzMolecule) / (var(--fzMolecule) - 3));
	// --fz--xl: calc(1em * var(--fzMolecule) / (var(--fzMolecule) - 2));
	// --fz--l: calc(1em * var(--fzMolecule) / (var(--fzMolecule) - 1));
	// --fz--s: calc(1em * var(--fzMolecule) / (var(--fzMolecule) + 1));
	// --fz--xs: calc(1em * var(--fzMolecule) / (var(--fzMolecule) + 2));
	// --fz--2xs: calc(1em * var(--fzMolecule) / (var(--fzMolecule) + 3));

	// clampでテキストサイズを変化させたい領域に指定する
	// --fz-fluid--s: clamp(0.9rem, 0.75rem + 0.8cqw, 1rem); // 小さい方向のみ. 300: .9rem ~ 500: 1rem
	// --fz-fluid: clamp(0.9rem, 0.8rem + 0.5cqw, 1.1rem); // 上下両方. 320: .9rem ~ 960: 1.1rem
	// --fz-fluid--l: clamp(1rem, 0.9rem + 0.25cqw, 1.1rem); // 大きい方向のみ 640: 1rem a~ 960: 1.1rem

	// ------------------------------
	// line-height 変数
	// ------------------------------
	// tight snug - relaxed loose or shorter short - tall taller ?
	--lh--root: 1.75;
	--lh--xs: calc(var(--lh--root) - 0.25);
	--lh--s: calc(var(--lh--root) - 0.125);
	--lh--l: calc(var(--lh--root) + 0.125);
	--lh--xl: calc(var(--lh--root) + 0.25);

	// 1~9 だと普通の数値指定と区別がつかないので単位は10
	// --lh--10: 1;
	// --lh--20: 1.125;
	// --lh--30: 1.25;
	// --lh--40: 1.375;
	// --lh--50: 1.5;
	// ...

	// ------------------------------------------------------------
	// カラー
	// ------------------------------------------------------------

	// --------------------
	// パレットカラー
	// --------------------
	// --hsl-black: 0 0% 0%;
	// --hsl-white: 0 0% 100%;
	// --hsl-gray: 210 8% 40%;
	// --hsl-red: 4 72% 50%;
	// --hsl-orange: 28 76% 50%;
	// --hsl-yellow: 46 76% 48%;
	// --hsl-green: 145 80% 40%;
	// --hsl-blue: 205 76% 50%;
	// --hsl-purple: 258 72% 50%;
	// --hsl-pink: 325 72% 50%;
	// --black: hsl(var(--hsl-black));
	// --white: hsl(var(--hsl-white));
	// --gray: hsl(var(--hsl-gray));
	// --red: hsl(var(--hsl-red));
	// --orange: hsl(var(--hsl-orange));
	// --yellow: hsl(var(--hsl-yellow));
	// --green: hsl(var(--hsl-green));
	// --blue: hsl(var(--hsl-blue));
	// --purple: hsl(var(--hsl-purple));
	// --pink: hsl(var(--hsl-pink));
	--black: #000;
	--white: #fff;
	--gray: hsl(210 8% 44%);
	--red: hsl(4 72% 50%);
	--orange: hsl(26 80% 48%);
	--yellow: hsl(48 92% 42%);
	--green: hsl(140 80% 44%);
	--blue: hsl(200 76% 50%);
	--purple: hsl(260 72% 50%);
	--pink: hsl(320 72% 50%);

	// --------------------
	// basic カラー
	// --------------------

	// ベースカラーに合わせたカラーを段階的に用意
	// --hs--bc: 215 8%;
	// --hsl--bc: 215 8% 60%;

	// n50?
	// --b50: hsl(var(--hs--bc) 99%);
	// --b100: hsl(var(--hs--bc) 96%);
	// --b200: hsl(var(--hs--bc) 92%);
	// --b300: hsl(var(--hs--bc) 84%);
	// --b400: hsl(var(--hs--bc) 72%);
	// --b500: hsl(var(--hs--bc) 60%);
	// --b600: hsl(var(--hs--bc) 48%);
	// --b700: hsl(var(--hs--bc) 36%);
	// --b800: hsl(var(--hs--bc) 24%); // 淡い文字色 strong背景色
	// --b900: hsl(var(--hs--bc) 12%); // ほんの少しだけ淡い文字色.
	// --b950: hsl(var(--hs--bcc) 8%); // 文字色

	// --------------------
	// キーワードカラー main(brand?), accent, base, content
	// --------------------

	// --color--: 文字色・背景色など共通して採用されるカラー
	--c--main: #1e4e6b;
	--c--accent: #bc3453;
	--c--accent-2: #bc3453;
	--c--accent-3: #bc3453;

	// base
	--c--base: hsl(220 4% 99%);
	--c--base-2: hsl(220 8% 94%);
	// --c--base-3: hsl(220 8% 86%); // border用

	// text
	--c--text: hsl(215 4% 8%);
	--c--text-2: hsl(215 4% 40%);
	// --text-3: hsl(225, 4%, 50%); //hsl(200, 12%, 92%);

	// divider (border-color)
	--c--divider: hsl(220 4% 82%);
	// --divider?

	// --c--base-text, --c--base-bg

	// accent, accent-2, accent-3
	// base, base-2, base-3 … 基本、濃くなっていく
	// text, text-2, text-3 …　基本、薄くなっていく

	// ボーダーはどちらでも使える感じか。
	// --bdc-pale,base,strong

	/* ------------------------------------------------------------
	  radius
	------------------------------------------------------------ */
	// 10,20, ... ?

	// rads
	// 10,20,30,..?
	--radii--xs: 0.125rem; // ≒ 2px
	--radii--s: 0.25rem; // ≒ 4px
	--radii--m: 0.625rem; // ≒ 8px
	--radii--l: 1rem; // ≒ 12px
	--radii--xl: 1.75rem; // ≒ 20px
	// --radii--2xl: 1.875rem; // ≒ 30px
	--radii--full: 999px;

	/* ------------------------------------------------------------
	  shadow
	------------------------------------------------------------ */
	--sh-hsl: 210 20% 20%;
	--sh-a: 10%;

	// --sh-a--base: calc(var(--sh-a) - 4%);
	// --sh-color--base: hsl(var(--sh-hsl) / var(--sh-a--base));

	// shadow:

	// x y blur
	// x: 0, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89,
	// y: 3 で x:y が 1:2。高い位置にあるほど比率が大きくなる。
	// blur: y + x
	// --sh-size--0: 1px 1px 2px 0;
	// --sh-size--1: 2px 3px 5px 0;
	// --sh-size--2: 3px 5px 8px 0;
	// --sh-size--3: 5px 10px 15px 0;
	// --sh-size--4: 8px 18px 26px 0;
	// --sh-size--5: 13px 30px 43px 0;

	--sh-size--0: 1px 1px 2px 0;
	--sh-size--1: 2px 3px 5px 0;
	--sh-size--2: 4px 7px 11px 0;
	--sh-size--3: 7px 14px 21px 0;
	--sh-size--4: 11px 24px 35px 0;
	--sh-size--5: 16px 36px 52px 0;

	// --sh-size--0: 1px 2px 3px 0;
	// --sh-size--1: 2px 4px 6px 0;
	// --sh-size--2: 3px 6px 9px 0;
	// --sh-size--3: 5px 10px 15px 0;
	// --sh-size--4: 8px 16px 24px 0;
	// --sh-size--5: 13px 26px 39px 0;

	// --sh-size--0: 0.5px 1px 2px 0;
	// --sh-size--1: 1px 2px 4px 0;
	// --sh-size--2: 2px 4px 8px 0;
	// --sh-size--3: 4px 8px 16px 0;
	// --sh-size--4: 8px 16px 32px 0;
	// --sh-size--5: 16px 32px 64px 0;

	/* ------------------------------------------------------------
	  filter
	------------------------------------------------------------ */
	// --filter--blur: blur(4px);
	// --filter--blur--l: blur(8px);
	// --filter--lighten: brightness(1.15);
	// --filter--darken: brightness(0.85);
}

// :lang(en) {
// 	--herfLeading: calc((1lh - 1cap) / 2);
// }
// lh非サポートブラウザ用のフォールバック
@supports not (gap: 1lh) {
	:root {
		--herfLeading: 0.125em;
	}
}

:root,
.is--resetShVar {
	--sh-color: hsl(var(--sh-hsl) / var(--sh-a));
	// カラー変数込みで変数をセットしてしまうと、--sh-color がこの時点で固定されてしまう。
	// --sh-size-1: 0.5px 1px 1px 0 var(--sh-color);
	--sh--1: var(--sh-size--0) var(--sh-color), var(--sh-size--1) var(--sh-color);
	--sh--2: var(--sh-size--1) var(--sh-color), var(--sh-size--2) var(--sh-color);
	--sh--3: var(--sh-size--2) var(--sh-color), var(--sh-size--3) var(--sh-color);
	--sh--4: var(--sh-size--3) var(--sh-color), var(--sh-size--4) var(--sh-color);
	--sh--5: var(--sh-size--4) var(--sh-color), var(--sh-size--5) var(--sh-color);

	--sh--i1: inset var(--sh-size--0) var(--sh-color), inset var(--sh-size--1) var(--sh-color);
	--sh--i2: inset var(--sh-size--1) var(--sh-color), inset var(--sh-size--2) var(--sh-color);
	// --sh--i3: inset var(--sh-size--2) var(--sh-color), inset var(--sh-size--3) var(--sh-color);
}

// ↓ space: これでもわりとしっくりくる...？ 2:.25, 3: 0.375
// 10: .25
// 20: 0.375
// 30: 0.625
// 40: 1
// 50: 1.625
// 60: 2.625
// 70: 4.25
// 80: 6.875
// 90: 11.125
// 100: 18
