// .has--divider\:B,
// .has--divider\:I {
// 	--bdc: red; //var(--base-3);
// 	--bdw: 1px;
// 	--bds: solid;
// }

// シンプルに * > *
// .has--divider\:B > * + * {
// 	border-block-start: var(--bdw) var(--bds) var(--bdc);
// }

// // flexでの折返しを考慮して、end方向につける
// .has--divider\:I > :not(:last-child) {
// 	border-inline-end: var(--bdw) var(--bds) var(--bdc);
// }

// .has--divider {
// 	--bdc: var(--divider-bdc);
// 	--bds: solid;
// 	--bdw: 1px;
// }

// :where(.has--divider:not(.l--flex)) > :not(:last-child) {
// 	border-block-end: var(--bds) var(--bdw) var(--bdc);
// }

// :where(.has--divider.l--flex) > :not(:last-child) {
// 	border-inline-end: var(--bds) var(--bdw) var(--bdc);
// }

.has--divider {
	--bdc: var(--divider-bdc);
	--bds: solid;
	--bdw: 1px;
	--isRow: 0;
	--_bdw: calc(var(--isRow, 0) * var(--bdw)); // isRow 1 なら 1px, isRow 0 なら 0px
	&:where(.l--flex) {
		--isRow: 1;
	}

	> :not(:last-child) {
		border-inline-end: var(--bds) var(--_bdw) var(--bdc);
		border-block-end: var(--bds) calc(var(--bdw) - var(--_bdw)) var(--bdc);
	}
}
