// state
@forward './gutter';
@forward './flow';
@forward './container'; // Note: flow より後ろで読み込む
@forward './size'; // Note: container より後ろで読み込む
@forward './has-divider';
@forward './linkbox';
@forward './frame';
@forward './is-colored';

// .is--square ?
// .has--size {
// 	width: var(--size);
// 	height: var(--size);
// }

.has--mask {
	mask: var(--mask-img) no-repeat 50% 50% / contain;
}

.is--trimHL {
	> :where(p, h1, h2, h3, h4, h5, h6):first-child {
		margin-block-start: calc(var(--herfLeading) * -1);
	}
	> :where(p, h1, h2, h3, h4, h5, h6):last-child {
		margin-block-end: calc(var(--herfLeading) * -1);
	}
	// > img {
	// 	--herfLeading: 0px;
	// }
}

// Note: dialog に影響する
:where(.is--reset) {
	color: inherit;
	background: none;
	border: none;
	padding: 0;
	margin: 0;
	max-width: unset;
	max-height: unset;
	font: inherit;
}

// .has--itemMinW {
// 	--item-minW: 5rem;

// 	> * {
// 		min-width: var(--item-minW);
// 	}
// }
