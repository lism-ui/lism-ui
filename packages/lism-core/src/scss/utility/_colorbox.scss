/*
    Note: c,bgc,bdc ユーティリティより前で読み込むこと。
*/

// @supports (color: color-mix(in srgb, #000, #fff)) {
:root {
	// --mixcolorspace: srgb
	--cbox-mixper--bg: 4%;
	--cbox-mixper--bdc: 20%;
	--cbox-mixper--txt: 20%;
	// --cbox-mixper--link: 80%;
}

/* stylelint-disable */


// memo: パレットカラーだけに限定すれば、hsl(var(--color / alpha )) でいける? → ただしその場合は半透明にすることしかできないので、どちらにせよ微妙。

// is--cbox -cbox:red
[class*="-boxcolor:"]{
	// c,bdc は 変数セットのみ
	// --c: var(--cbox-c, var(--c--text));
	--bdc: var(--cbox-bdc, var(--c--divider));
	--c: var(--cbox-c, var(--c--text));
	--bgc: var(--cbox-bgc, var(--c--base-2));
	color: var(--c);
	background-color: var(--bgc);
}
@supports (color: color-mix(in srgb, #000, #fff)) {
	// --boxcolor 必須. 親から引き継ぎたいこともあるかもしれないので、初期セットはしない
	:where([class*="-boxcolor:"]){
		--cbox-c: color-mix(in srgb, var(--c--text), var(--boxcolor) var(--cbox-mixper--txt));
		--cbox-bgc: color-mix(in srgb, var(--c--base), var(--boxcolor) var(--cbox-mixper--bg));
		--cbox-bdc: color-mix(in srgb, var(--c--base), var(--boxcolor) var(--cbox-mixper--bdc));
		// --cbox-c--link を使いたい時もあるので、--link-c への直接セットはしない。(color-mix未対応のブラウザを考慮）
		// --cbox-c--link: color-mix( in srgb, var(--c--text), var(--boxcolor) var(--cbox-mixper--link));
		--link-c: var(--boxcolor); // var(--cbox-c--link);
	}
}


// cbox, boxcolor
// is--cbox
// is--colored
// 特定の値（からー）が必要なので、 state クラスではなく prop ステートか...?
$colors: "red", "orange", "yellow", "green", "blue", "purple", "pink", "gray", "black", "white";
@each $c in $colors {
	.-boxcolor\:#{$c}{--boxcolor: var(--#{$c})}
}



// c='(.*):(.+)%' で使用箇所検索　
.-c\:mix{
	--c1-per:50%;
	--c1: currentColor;
	--c2: transparent;
	--c: color-mix(in srgb, var(--c1) var(--c1-per), var(--c2));
}
.-bgc\:mix{
	--bgc1-per:50%;
	--bgc1: currentColor;
	--bgc2: transparent;
	--bgc: color-mix(in srgb, var(--bgc1) var(--bgc1-per), var(--bgc2)); 
}
.-bdc\:mix{
	--bdc1-per:50%;
	--bdc1: currentColor;
	--bdc2: transparent;
	--bdc: color-mix(in srgb, var(--bdc1) var(--bdc1-per), var(--bdc2)); 
}
