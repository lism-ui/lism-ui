// for screen reader
.u--hidden {
	position: absolute;
	width: 1px;
	height: 1px;
	padding: 0;
	margin: -1px;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	white-space: nowrap;
	border-width: 0;
}

.u--trimHL {
	> :where(p, h1, h2, h3, h4, h5, h6):first-child {
		margin-block-start: calc(var(--herfLeading) * -1);
	}
	> :where(p, h1, h2, h3, h4, h5, h6):last-child {
		margin-block-end: calc(var(--herfLeading) * -1);
	}
}

/*
    Note: c,bgc,bdc ユーティリティより前で読み込むこと。
*/

// @supports (color: color-mix(in srgb, #000, #fff)) {
/* stylelint-disable */


// is--cbox -cbox:red
.u--colored{
	// c,bdc は 変数セットのみ
	// --c: var(--cbox-c, var(--c--text));
	--bdc: var(--c--divider);
	--c: var(--c--text);
	--bgc: var(--c--base-2);
	color: var(--c);
	background-color: var(--bgc);
}
@supports (color: color-mix(in srgb, #000, #fff)) {
	// --keycolor は 必須. 親から引き継ぎたいこともあるかもしれないので、初期セットはしない
	.u--colored{
		--c: color-mix(in srgb, var(--c--text), var(--keycolor) var(--colored-per--txt, 16% ));
		--bgc: color-mix(in srgb, var(--c--base), var(--keycolor) var(--colored-per--bg, 4% ));
		--bdc: color-mix(in srgb, var(--c--base), var(--keycolor) var(--colored-per--bdc, 25% ));
		--c--link: var(--keycolor); // var(--cbox-c--link);
	}
}



.u--hiddenLink {
	position: absolute;
	inset: 0;
}

.u--overlayLink {
	text-decoration: none;
	position: static;
	color: inherit;

	&::before {
		position: absolute;
		inset: 0;
		z-index: 0;
		content: '';
	}
}

// 次の要素の mbs を 0 にする。（hidden要素 や absoluteな要素が先頭に入り込んでいる時などに活用できる。）
.u--skipFlow + * {
	--mbs: 0;
}
